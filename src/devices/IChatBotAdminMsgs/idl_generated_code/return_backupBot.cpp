/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#include <return_backupBot.h>

// Constructor with field values
return_backupBot::return_backupBot(const bool result,
                                   const std::string& backupString) :
        WirePortable(),
        result(result),
        backupString(backupString)
{
}

// Read structure on a Wire
bool return_backupBot::read(yarp::os::idl::WireReader& reader)
{
    if (!read_result(reader)) {
        return false;
    }
    if (!read_backupString(reader)) {
        return false;
    }
    if (reader.isError()) {
        return false;
    }
    return true;
}

// Read structure on a Connection
bool return_backupBot::read(yarp::os::ConnectionReader& connection)
{
    yarp::os::idl::WireReader reader(connection);
    if (!reader.readListHeader(2)) {
        return false;
    }
    if (!read(reader)) {
        return false;
    }
    return true;
}

// Write structure on a Wire
bool return_backupBot::write(const yarp::os::idl::WireWriter& writer) const
{
    if (!write_result(writer)) {
        return false;
    }
    if (!write_backupString(writer)) {
        return false;
    }
    if (writer.isError()) {
        return false;
    }
    return true;
}

// Write structure on a Connection
bool return_backupBot::write(yarp::os::ConnectionWriter& connection) const
{
    yarp::os::idl::WireWriter writer(connection);
    if (!writer.writeListHeader(2)) {
        return false;
    }
    if (!write(writer)) {
        return false;
    }
    return true;
}

// Convert to a printable string
std::string return_backupBot::toString() const
{
    yarp::os::Bottle b;
    if (!yarp::os::Portable::copyPortable(*this, b)) {
        return {};
    }
    return b.toString();
}

// read result field
bool return_backupBot::read_result(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readBool(result)) {
        reader.fail();
        return false;
    }
    return true;
}

// write result field
bool return_backupBot::write_result(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeBool(result)) {
        return false;
    }
    return true;
}

// read (nested) result field
bool return_backupBot::nested_read_result(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readBool(result)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) result field
bool return_backupBot::nested_write_result(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeBool(result)) {
        return false;
    }
    return true;
}

// read backupString field
bool return_backupBot::read_backupString(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readString(backupString)) {
        reader.fail();
        return false;
    }
    return true;
}

// write backupString field
bool return_backupBot::write_backupString(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeString(backupString)) {
        return false;
    }
    return true;
}

// read (nested) backupString field
bool return_backupBot::nested_read_backupString(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readString(backupString)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) backupString field
bool return_backupBot::nested_write_backupString(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeString(backupString)) {
        return false;
    }
    return true;
}
